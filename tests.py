import unittest
import ukpostcodes.ukpostcodes as ukpostcodes

class TestMethods(unittest.TestCase):
    """
        Unit Test for all methods in ukpostcodes library.

        Valid postcodes generated by postcodes.IO API endpoint(not added to library since not required for production)
        Invalid postcodes are manually adjusted for possible invalid validation types. 
    """
    def test_get_postcode_details(self):
        self.assertEqual(ukpostcodes.get_postcode_details("SL6 1DT")['status'], 200)
        self.assertEqual(ukpostcodes.get_postcode_details("SL6 1DT")['result']['postcode'], "SL6 1DT")
        self.assertEqual(ukpostcodes.get_postcode_details("SL6 1DT")['result']['country'], "England")
        self.assertEqual(ukpostcodes.get_postcode_details("ABCD 6PX")['status'], 404)
    
    def test_validate_postcode_api(self):
        self.assertTrue(ukpostcodes.validate_postcode_api("SL6 1DT"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("NG12 4AS"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("E1W 9DW"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("WC1B 4BA"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("WS7 0EX"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("GU1 2TB"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("CF5 4UE"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("NN3 2SQ"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("M1 5NR"), True)
        self.assertTrue(ukpostcodes.validate_postcode_api("N15 4JY"), True)

        self.assertFalse(ukpostcodes.validate_postcode_api("SL6 ADT"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("AS6 99T"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("BK6 551"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("SL6 4A5"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("KA6 5ABC"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("6 1DT"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("12A 19A"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("B15 5BC"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("XXAA 1DT"), False)
        self.assertFalse(ukpostcodes.validate_postcode_api("15 AST"), False)

    def test_validate_postcode_regex(self):
        self.assertTrue(ukpostcodes.validate_postcode_regex("SL6 1DT"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("NG12 4AS"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("E1W 9DW"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("WC1B 4BA"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("WS7 0EX"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("GU1 2TB"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("CF5 4UE"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("NN3 2SQ"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("M1 5NR"), True)
        self.assertTrue(ukpostcodes.validate_postcode_regex("N15 4JY"), True)

        self.assertFalse(ukpostcodes.validate_postcode_regex("SL6 ADT"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("AS6 99T"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("BK6 551"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("SL6 4A5"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("KA6 5ABC"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("6 1DT"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("12A 19A"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("B99A 5BC"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("XXAA 1DT"), False)
        self.assertFalse(ukpostcodes.validate_postcode_regex("15 AST"), False)

    def test_parse_inward(self):
        self.assertEqual(ukpostcodes.parse_inward("SL6 1DT"),"1DT")
        self.assertEqual(ukpostcodes.parse_inward("FK16 6JG"),"6JG")
        self.assertEqual(ukpostcodes.parse_inward("M33 5FL"),"5FL")
        self.assertEqual(ukpostcodes.parse_inward("KA3 4BU"),"4BU")
        self.assertEqual(ukpostcodes.parse_inward("E5 9EN"),"9EN")

    def test_parse_outward(self):
        self.assertEqual(ukpostcodes.parse_outward("SL6 1DT"),"SL6")
        self.assertEqual(ukpostcodes.parse_outward("FK16 6JG"),"FK16")
        self.assertEqual(ukpostcodes.parse_outward("M33 5FL"),"M33")
        self.assertEqual(ukpostcodes.parse_outward("KA3 4BU"),"KA3")
        self.assertEqual(ukpostcodes.parse_outward("E5 9EN"),"E5")

if __name__ == '__main__':
    unittest.main()